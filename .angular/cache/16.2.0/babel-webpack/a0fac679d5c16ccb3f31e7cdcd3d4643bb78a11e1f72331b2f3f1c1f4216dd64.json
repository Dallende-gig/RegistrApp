{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DiegoAllende/OneDrive - Comtec Global/Escritorio/registrapp/RegistrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"src/services/alertService/alert-service.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ForgotPasswordPage_ion_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"Formato erroneo de Email\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nclass ForgotPasswordPage {\n  constructor(router, alertController, alertService) {\n    this.router = router;\n    this.alertController = alertController;\n    this.alertService = alertService;\n    this.email = '';\n  }\n  isValidEmail(email) {\n    // validacion del correo electrónico\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailPattern.test(email);\n  }\n  //func reset password\n  resetPassword(email) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const apiKey = 'f6bb1a7bf37eac28cd3cf2f1c38c8f99cb687de9';\n        const emailToVerify = email.toLowerCase();\n        // Hacer una solicitud a la API de Hunter para verificar el correo\n        const hunterResponse = yield axios.get(`https://api.hunter.io/v2/email-verifier?email=${emailToVerify}&api_key=${apiKey}`);\n        const verificationResult = hunterResponse.data.data;\n        if (verificationResult.result === 'valid') {\n          console.log(`El correo electrónico ${email} es válido.`);\n        }\n        const emailnew = email;\n        const user = _this.findUserByEmail(email);\n        if (user) {\n          _this.sendResetPasswordEmail(user);\n          _this.showSuccessAlert();\n        } else {\n          _this.showErrorAlert();\n        }\n      } catch (error) {\n        console.error('Error al validar el correo electrónico:', error);\n      }\n    })();\n  }\n  findUserByEmail(email) {\n    const users = [{\n      username: 'Diego',\n      email: 'di.allende@duocuc.cl',\n      password: '123456'\n    }, {\n      username: 'Cam',\n      email: 'al.grumi@duocuc.cl',\n      password: '12345'\n    }, {\n      username: 'Nicolas',\n      email: 'ni@profesor.duoc.cl',\n      password: '123456A'\n    }];\n    return users.find(user => user.email === email);\n  }\n  sendResetPasswordEmail(user) {\n    console.log(`Sending reset password email to ${user.email}`);\n    const transporter = nodemailer.createTransport({\n      host: 'smtp.example.com',\n      port: 587,\n      secure: false,\n      auth: {\n        user: 'your_email@example.com',\n        pass: 'your_password'\n      }\n    });\n    const mailOptions = {\n      from: 'your_email@example.com',\n      to: user.email,\n      subject: 'Reset Password Request',\n      text: `Hi ${user.username},\n              Click here to reset your password: https://your-app.com/reset-password/${user._id}`,\n      html: `<p>Hi ${user.username},</p>\n              <p>Click here to reset your password:</p>\n              <a href=\"https://your-app.com/reset-password/${userid}\">Reset Password</a>`\n    };\n    transporter.sendMail(mailOptions, (error, info) => {\n      if (error) {\n        console.error('Error sending email:', error);\n      } else {\n        console.log('Email sent:', info.response);\n      }\n    });\n  }\n  showSuccessAlert() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this2.alertController.create({\n        header: 'Usuario encontrado',\n        message: 'Se enviará un correo para restablecer la contraseña.',\n        buttons: [{\n          text: 'OK',\n          handler: () => {\n            _this2.navigateToHome();\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n  showErrorAlert() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this3.alertController.create({\n        header: 'Error',\n        message: 'Favor ponte en contacto con tu administrador.',\n        buttons: [{\n          text: 'OK',\n          handler: () => {\n            _this3.navigateToHome();\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n  navigateToHome() {\n    this.router.navigate(['/home']);\n  }\n  ngOnInit() {}\n}\n_class = ForgotPasswordPage;\n_class.ɵfac = function ForgotPasswordPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.AlertServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-forgot-password\"]],\n  decls: 17,\n  vars: 6,\n  consts: [[3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"medium\"], [3, \"ngSubmit\"], [\"position\", \"floating\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [\"color\", \"danger\", \"position\", \"stacked\"]],\n  template: function ForgotPasswordPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"ion-header\", 1)(2, \"ion-toolbar\")(3, \"ion-title\", 2);\n      i0.ɵɵtext(4, \"Restauracion de contrase\\u00F1a\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordPage_Template_form_ngSubmit_5_listener() {\n        return ctx.resetPassword(ctx.email);\n      });\n      i0.ɵɵelementStart(6, \"h2\");\n      i0.ɵɵtext(7, \"Olvidaste tu contrase\\u00F1a?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9, \"Ingresa tu direcci\\u00F3n de correo electr\\u00F3nico y te enviaremos instrucciones para restablecer tu contrase\\u00F1a.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 4);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"ion-input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ForgotPasswordPage_Template_ion_input_ngModelChange_13_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, ForgotPasswordPage_ion_item_14_Template, 3, 0, \"ion-item\", 6);\n      i0.ɵɵelementStart(15, \"ion-button\", 7);\n      i0.ɵɵtext(16, \"Reestablecer contrase\\u00F1a\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && !ctx.isValidEmail(ctx.email));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.isValidEmail(ctx.email));\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor],\n  styles: [\"a[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9mb3Jnb3QvZm9yZ290LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uL09uZURyaXZlJTIwLSUyMENvbXRlYyUyMEdsb2JhbC9Fc2NyaXRvcmlvL3JlZ2lzdHJhcHAvUmVnaXN0ckFwcC9zcmMvYXBwL2hvbWUvZm9yZ290L2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJhe1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbiAgIiwiYSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { ForgotPasswordPage };","map":{"version":3,"names":["axios","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordPage","constructor","router","alertController","alertService","email","isValidEmail","emailPattern","test","resetPassword","_this","_asyncToGenerator","apiKey","emailToVerify","toLowerCase","hunterResponse","get","verificationResult","data","result","console","log","emailnew","user","findUserByEmail","sendResetPasswordEmail","showSuccessAlert","showErrorAlert","error","users","username","password","find","transporter","nodemailer","createTransport","host","port","secure","auth","pass","mailOptions","from","to","subject","text","_id","html","userid","sendMail","info","response","_this2","alert","create","header","message","buttons","handler","navigateToHome","present","_this3","navigate","ngOnInit","ɵɵdirectiveInject","i1","Router","i2","AlertController","i3","AlertServiceService","selectors","decls","vars","consts","template","ForgotPasswordPage_Template","rf","ctx","ɵɵlistener","ForgotPasswordPage_Template_form_ngSubmit_5_listener","ForgotPasswordPage_Template_ion_input_ngModelChange_13_listener","$event","ɵɵtemplate","ForgotPasswordPage_ion_item_14_Template","ɵɵproperty","ɵɵadvance","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\DiegoAllende\\OneDrive - Comtec Global\\Escritorio\\registrapp\\RegistrApp\\src\\app\\home\\forgot\\forgot-password.page.ts","C:\\Users\\DiegoAllende\\OneDrive - Comtec Global\\Escritorio\\registrapp\\RegistrApp\\src\\app\\home\\forgot\\forgot-password.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { AlertServiceService } from 'src/services/alertService/alert-service.service';\r\nimport axios from 'axios';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private alertController: AlertController,\r\n    private alertService: AlertServiceService\r\n  ) { }\r\n\r\n\r\n  email: string = ''; \r\n  isValidEmail(email: string): boolean {\r\n    // validacion del correo electrónico\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(email);\r\n  }\r\n  //func reset password\r\n  async resetPassword(email: string) {\r\n    try{\r\n      const apiKey = 'f6bb1a7bf37eac28cd3cf2f1c38c8f99cb687de9'; \r\n      const emailToVerify = email.toLowerCase(); \r\n\r\n      // Hacer una solicitud a la API de Hunter para verificar el correo\r\n      const hunterResponse = await axios.get(`https://api.hunter.io/v2/email-verifier?email=${emailToVerify}&api_key=${apiKey}`);\r\n\r\n      const verificationResult = hunterResponse.data.data;\r\n\r\n      if (verificationResult.result === 'valid') {\r\n        console.log(`El correo electrónico ${email} es válido.`);\r\n      }\r\n\r\n        const emailnew = email;\r\n        const user = this.findUserByEmail(email);\r\n  \r\n        if (user) {\r\n          this.sendResetPasswordEmail(user);\r\n          this.showSuccessAlert();\r\n        } else {\r\n          this.showErrorAlert();\r\n        }\r\n    }  \r\n    catch (error: any) {\r\n      console.error('Error al validar el correo electrónico:', error);\r\n    }\r\n  }\r\n\r\n  findUserByEmail(email: string) {\r\n    const users = [\r\n      { username: 'Diego', email: 'di.allende@duocuc.cl', password: '123456' },\r\n      { username: 'Cam', email: 'al.grumi@duocuc.cl', password: '12345' },\r\n      { username: 'Nicolas', email: 'ni@profesor.duoc.cl', password: '123456A' }\r\n    ];\r\n    return users.find((user) => user.email === email);\r\n  }\r\n\r\n  sendResetPasswordEmail(user: { username: string, email: string }) {\r\n    console.log(`Sending reset password email to ${user.email}`);\r\n    const transporter = nodemailer.createTransport({\r\n      host: 'smtp.example.com',\r\n      port: 587,\r\n      secure: false, // true for 465, false for 587\r\n      auth: {\r\n        user: 'your_email@example.com',\r\n        pass: 'your_password'\r\n      }\r\n    });\r\n    \r\n    const mailOptions = {\r\n      from: 'your_email@example.com',\r\n      to: user.email,\r\n      subject: 'Reset Password Request',\r\n      text: `Hi ${user.username},\r\n              Click here to reset your password: https://your-app.com/reset-password/${user._id}`,\r\n      html: `<p>Hi ${user.username},</p>\r\n              <p>Click here to reset your password:</p>\r\n              <a href=\"https://your-app.com/reset-password/${userid}\">Reset Password</a>`\r\n    };\r\n    \r\n    transporter.sendMail(mailOptions, (error: any, info: { response: any; }) => {\r\n      if (error) {\r\n        console.error('Error sending email:', error);\r\n      } else {\r\n        console.log('Email sent:', info.response);\r\n      }\r\n    });\r\n  }\r\n\r\n  async showSuccessAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Usuario encontrado',\r\n      message: 'Se enviará un correo para restablecer la contraseña.',\r\n      buttons: [{\r\n        text: 'OK',\r\n        handler: () => {\r\n          this.navigateToHome();\r\n        }\r\n      }]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async showErrorAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Error',\r\n      message: 'Favor ponte en contacto con tu administrador.',\r\n      buttons: [{\r\n        text: 'OK',\r\n        handler: () => {\r\n          this.navigateToHome();\r\n        }\r\n      }]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n  \r\n  navigateToHome() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n} \r\n\r\n","<ion-content [fullscreen]=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"medium\">Restauracion de contraseña</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n  <form (ngSubmit)=\"resetPassword(email)\">\r\n    <h2>Olvidaste tu contraseña?</h2>\r\n    <p>Ingresa tu dirección de correo electrónico y te enviaremos instrucciones para restablecer tu contraseña.</p>\r\n    \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Email</ion-label>\r\n      <ion-input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{ standalone: true }\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item *ngIf=\"email && !isValidEmail(email)\">\r\n      <ion-label color=\"danger\" position=\"stacked\">Formato erroneo de Email</ion-label>\r\n    </ion-item>\r\n\r\n    <ion-button mat-raised-button type=\"submit\" [disabled]=\"!isValidEmail(email)\">Reestablecer contraseña</ion-button>\r\n  \r\n  </form>\r\n\r\n</ion-content>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}